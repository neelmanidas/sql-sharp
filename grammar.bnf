<query list> := <query specification> [ { <query specification> }... ]

<query specification> ::= SELECT <select list> FROM <identifier> [ WHERE <boolean value expression> ] [ GROUP BY <identifier> ] [ ORDER BY <identifier> [ ASC | DESC ] ] <semicolon>

<select list> ::= <asterisk> | <common value expression> [ { <comma> <common value expression> }... ]

<asterisk> ::= *

<common value expression> ::= <left paren> <common value expression> <right paren> | <nonparenthesized value expression primary> | <number>

<left paren> ::= (

<right paren> ::= )

<nonparenthesized value expression primary> ::= <identifier> | <set function type> <left paren> <common value expression> <right paren>

<identifier> ::= !! See the Syntax Rules

<set function type> ::= AVG | MAX | MIN | SUM | COUNT

<number> ::= !! See the Syntax Rules

<comma> ::= ,

<boolean value expression> ::= <boolean term> | <boolean value expression> OR <boolean term>

<boolean term> ::= <boolean factor> | <boolean term> AND <boolean factor>

<boolean factor> ::= [ NOT ] <boolean primary> [ IS [ NOT ] <truth value> ]

<boolean primary> ::= <row value predicand> <comp op> <row value predicand> | <boolean predicand>

<row value predicand> ::= <nonparenthesized value expression primary> | <common value expression> | <boolean predicand>

<boolean predicand> ::= <left paren> <boolean value expression> <right paren> | <nonparenthesized value expression primary>

<comp op> ::= <equals operator> | <less than operator> <greater than operator> | <less than operator> | <greater than operator> | <less than operator> <equals operator> | <greater than operator> <equals operator>

<equals operator> ::= =

<less than operator> ::= <

<greater than operator> ::= >

<truth value> ::= TRUE | FALSE | UNKNOWN

<semicolon> :: = ;
